<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="1" total="8" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-08-02T00:23:11 IST" name="Suite" finished-at="2023-08-02T00:25:58 IST" duration-ms="166829">
    <groups>
      <group name="errorValidations">
        <method signature="ErrorValidationsTest.loginErroValidation()[pri:0, instance:testingfy.tests.ErrorValidationsTest@12ed9db6]" name="loginErroValidation" class="testingfy.tests.ErrorValidationsTest"/>
        <method signature="ErrorValidationsTest.productErrorValidation()[pri:0, instance:testingfy.tests.ErrorValidationsTest@12ed9db6]" name="productErrorValidation" class="testingfy.tests.ErrorValidationsTest"/>
      </group> <!-- errorValidations -->
    </groups>
    <test started-at="2023-08-02T00:23:11 IST" name="Submit Order Test" finished-at="2023-08-02T00:25:03 IST" duration-ms="111940">
      <class name="testingfy.tests.SubmitOrderTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:testingfy.tests.SubmitOrderTest@4ce1d6d0]" started-at="2023-08-02T00:23:12 IST" name="launchApplication" finished-at="2023-08-02T00:23:25 IST" duration-ms="13297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:testingfy.tests.SubmitOrderTest@4ce1d6d0]" started-at="2023-08-02T00:23:25 IST" name="submitOrder" data-provider="dataProvider" finished-at="2023-08-02T00:23:35 IST" duration-ms="9855" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Testing@1, product=ZARA COAT 3, email=selenium@testing.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testingfy.tests.SubmitOrderTest@4ce1d6d0]" started-at="2023-08-02T00:23:35 IST" name="tearDown" finished-at="2023-08-02T00:23:36 IST" duration-ms="1377" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:testingfy.tests.SubmitOrderTest@4ce1d6d0]" started-at="2023-08-02T00:23:36 IST" name="launchApplication" finished-at="2023-08-02T00:24:14 IST" duration-ms="37468" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:testingfy.tests.SubmitOrderTest@4ce1d6d0]" started-at="2023-08-02T00:24:14 IST" name="submitOrder" data-provider="dataProvider" finished-at="2023-08-02T00:24:29 IST" duration-ms="14585" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Testing@1, product=ADIDAS ORIGINAL, email=selenium1@testing.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testingfy.tests.SubmitOrderTest@4ce1d6d0]" started-at="2023-08-02T00:24:29 IST" name="tearDown" finished-at="2023-08-02T00:24:29 IST" duration-ms="750" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:testingfy.tests.SubmitOrderTest@4ce1d6d0]" started-at="2023-08-02T00:24:29 IST" name="launchApplication" finished-at="2023-08-02T00:24:40 IST" duration-ms="10295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="orderHistoryTest(java.util.HashMap)[pri:0, instance:testingfy.tests.SubmitOrderTest@4ce1d6d0]" started-at="2023-08-02T00:24:40 IST" name="orderHistoryTest" data-provider="dataProvider" finished-at="2023-08-02T00:24:43 IST" depends-on-methods="testingfy.tests.SubmitOrderTest.submitOrder" duration-ms="3413" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Testing@1, product=ZARA COAT 3, email=selenium@testing.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderHistoryTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testingfy.tests.SubmitOrderTest@4ce1d6d0]" started-at="2023-08-02T00:24:43 IST" name="tearDown" finished-at="2023-08-02T00:24:45 IST" duration-ms="1561" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:testingfy.tests.SubmitOrderTest@4ce1d6d0]" started-at="2023-08-02T00:24:45 IST" name="launchApplication" finished-at="2023-08-02T00:24:56 IST" duration-ms="11799" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="orderHistoryTest(java.util.HashMap)[pri:0, instance:testingfy.tests.SubmitOrderTest@4ce1d6d0]" started-at="2023-08-02T00:24:56 IST" name="orderHistoryTest" data-provider="dataProvider" finished-at="2023-08-02T00:25:01 IST" depends-on-methods="testingfy.tests.SubmitOrderTest.submitOrder" duration-ms="4995" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Testing@1, product=ADIDAS ORIGINAL, email=selenium1@testing.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderHistoryTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testingfy.tests.SubmitOrderTest@4ce1d6d0]" started-at="2023-08-02T00:25:01 IST" name="tearDown" finished-at="2023-08-02T00:25:03 IST" duration-ms="1326" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testingfy.tests.SubmitOrderTest -->
    </test> <!-- Submit Order Test -->
    <test started-at="2023-08-02T00:25:04 IST" name="Error Validations Test" finished-at="2023-08-02T00:25:58 IST" duration-ms="53316">
      <class name="testingfy.tests.ErrorValidationsTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:testingfy.tests.ErrorValidationsTest@12ed9db6]" started-at="2023-08-02T00:25:04 IST" name="launchApplication" finished-at="2023-08-02T00:25:13 IST" duration-ms="8393" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="loginErroValidation()[pri:0, instance:testingfy.tests.ErrorValidationsTest@12ed9db6]" started-at="2023-08-02T00:25:13 IST" name="loginErroValidation" finished-at="2023-08-02T00:25:15 IST" duration-ms="2202" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrectdefect email or password.] but found [Incorrect email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrectdefect email or password.] but found [Incorrect email or password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at testingfy.tests.ErrorValidationsTest.loginErroValidation(ErrorValidationsTest.java:20)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErroValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testingfy.tests.ErrorValidationsTest@12ed9db6]" started-at="2023-08-02T00:25:15 IST" name="tearDown" finished-at="2023-08-02T00:25:16 IST" duration-ms="1316" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:testingfy.tests.ErrorValidationsTest@12ed9db6]" started-at="2023-08-02T00:25:16 IST" name="launchApplication" finished-at="2023-08-02T00:25:27 IST" duration-ms="10551" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="loginErroValidation()[pri:0, instance:testingfy.tests.ErrorValidationsTest@12ed9db6]" started-at="2023-08-02T00:25:27 IST" name="loginErroValidation" finished-at="2023-08-02T00:25:33 IST" duration-ms="5782" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrectdefect email or password.] but found [Incorrect email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrectdefect email or password.] but found [Incorrect email or password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at testingfy.tests.ErrorValidationsTest.loginErroValidation(ErrorValidationsTest.java:20)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErroValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testingfy.tests.ErrorValidationsTest@12ed9db6]" started-at="2023-08-02T00:25:34 IST" name="tearDown" finished-at="2023-08-02T00:25:39 IST" duration-ms="4919" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:testingfy.tests.ErrorValidationsTest@12ed9db6]" started-at="2023-08-02T00:25:39 IST" name="launchApplication" finished-at="2023-08-02T00:25:46 IST" duration-ms="7702" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="productErrorValidation()[pri:0, instance:testingfy.tests.ErrorValidationsTest@12ed9db6]" started-at="2023-08-02T00:25:46 IST" name="productErrorValidation" finished-at="2023-08-02T00:25:57 IST" duration-ms="10215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testingfy.tests.ErrorValidationsTest@12ed9db6]" started-at="2023-08-02T00:25:57 IST" name="tearDown" finished-at="2023-08-02T00:25:58 IST" duration-ms="871" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testingfy.tests.ErrorValidationsTest -->
    </test> <!-- Error Validations Test -->
  </suite> <!-- Suite -->
</testng-results>
